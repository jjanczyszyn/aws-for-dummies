server {
    # If no Host match, close the connection to prevent Host spoofing
    listen 80 default_server;
    return 444;
}

server {
    listen 443;
    server_name {{ web_host }};

    ssl on;
    ssl_certificate {{nginx_certs_dir}}/{{cert}};
    ssl_certificate_key  {{nginx_certs_dir}}/{{certkey}};
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
    ssl_session_cache shared:SSL:50m;
    ssl_prefer_server_ciphers on;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security max-age=31536000;

    client_max_body_size 200M;
    access_log {{ nginx_log_dir }}/nginx.access.log;
    error_log {{ nginx_log_dir }}/nginx.error.log;

    gzip on;
	gzip_disable "msie6";

	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 7;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    keepalive_timeout 5;

    # path for static files
    root {{ web_base_dir }}/STATIC/;

    location / {
        # checks for static file, if not found proxy to app
        try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header HTTPS $https;

        proxy_redirect off;

        proxy_pass   http://127.0.0.1:{{ web_listen_port }};
    }
}

server {
    listen 80;
    server_name {{ web_host }};
    return 301 https://$host$request_uri;

}
